---
Comment: A step function to send email a emailable user after 1min of sub
StartAt: addEmailToDB
States:
  addEmailToDB:
    Type: Task
    Resource: arn:aws:states:::lambda:invoke
    Parameters:
      FunctionName: {"Fn::Join": [ ":", [  "arn:aws:lambda:sa-east-1", {"Ref": "AWS::AccountId"}, "function:${self:service-${self:provider.state}-addSignup}" ] ]}
      Payload:
        Input.$: "$"
    Next: wait for 1min
  wait for 1min:
    Type: Wait
    Seconds: 60
    Next: readDynamo
  readDynamo:
    Type: Task
    Resource: arn:aws:states:::lambda:invoke
    Parameters:
      FunctionName: {"Fn::Join": [ ":", [  "arn:aws:lambda:sa-east-1", {"Ref": "AWS::AccountId"}, "function:${self:service-${self:provider.state}-readDynamo}" ] ]}
      Payload:
        Input.$: "$"
    Next: isEmailable
  isEmailable:
    Type: Choice
    Choices:
    - Variable: "$.Payload.emailer"
      StringEquals: 'true'
      Next: close
    Default: sendEmail
  sendEmail:
    Type: Task
    Resource: arn:aws:states:::lambda:invoke
    Parameters:
      FunctionName: {"Fn::Join": [ ":", [  "arn:aws:lambda:sa-east-1", {"Ref": "AWS::AccountId"}, "function:${self:service-${self:provider.state}-sendEmail}" ] ]}
      Payload:
        Input.$: "$"
    Next: close
  close:
    Type: Succeed
