

service: crowdingless
# account serverless
# tenant: joaobispo2077 
# app: crowdingless-api 

frameworkVersion: '2'

plugins:
  - serverless-s3-local
  - serverless-dynamodb-local
  - serverless-offline


provider:
  apiGateway:
      binaryMediaTypes:
          - 'multipart/form-data'
  name: aws
  runtime: nodejs12.x
  region: sa-east-1
  memorySize: 512
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - s3:*
        - s3:GetObject
        - s3:PutObject
        - dynamodb:PutItem
        - dynamodb:Scan*
        - dynamodb:GetItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource:
        - "arn:aws:s3:::bucketimagecrowdingless/*"
        - "arn:aws:dynamodb:sa-east-1:998571726230:table/crowdingless-employees-dev"


  environment:
    DYNAMODB_EMPLOYEE_TABLE: crowdingless-employees-dev
    bucket: bucketimagecrowdingless

functions:
  crowdingless-api:
    handler: handler.handler
    events:
      - http:
          path: /
          method: get
          cors: true
      - http:
          path: /{proxy+}
          method: any
          cors: true
  create: 
    handler: employee.create
    events:
      - http:
          path: /v1/employee
          method: post
  list: 
    handler: employee.list
    events:
      - http:
          path: /v1/employee
          method: get
  get: 
    handler: employee.get
    events:
      - http:
          path: /v1/employee/{email}
          method: get
  update: 
    handler: employee.update
    events:
      - http:
          path: /v1/employee/{email}
          method: patch
  delete: 
    handler: employee.delete
    events:
      - http:
          path: /v1/employee/{email}
          method: delete
  optimize:
    handler: optimize.handle
    environment: 
      bucket: bucketimagecrowdingless
    events:
      - s3:
          bucket: bucketimagecrowdingless
          event: s3:ObjectCreated:*
          rules:
            - prefix: uploads/
            - suffix: .jpg
      - s3:
          bucket: bucketimagecrowdingless
          event: s3:ObjectCreated:*
          rules:
            - prefix: uploads/
            - suffix: .png
      - s3:
          bucket: bucketimagecrowdingless
          event: s3:ObjectCreated:*
          rules:
            - prefix: uploads/
            - suffix: .jpeg

resources:
  Resources: 
    employeeTable: 
      Type: 'AWS::DynamoDB::Table'
      Properties:
        TableName: crowdingless-employees-dev
        AttributeDefinitions:
          - AttributeName: email
            AttributeType: S
        KeySchema:
          - AttributeName: email
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST

